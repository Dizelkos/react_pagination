{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","paginationNums","count","result","i","push","paginationsCount","firstPage","lastPage","length","className","cn","disabled","onClick","href","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","setCurrentPage","setPerPage","maxItems","firstItem","lastItem","visibleItems","slice","id","value","onChange","event","target","selectedPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAwBO,IAAMA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EApBR,SACEJ,EACAC,GAKA,IAHA,IAAMI,EAAQL,EAAQC,EAChBK,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAOE,GAAK,EAC9BD,EAAOE,KAAKD,EAAI,GAGlB,OAAOD,EASgBG,CAAiBT,EAAOC,GACzCS,EAAYN,EAAe,GAC3BO,EAAWP,EAAeA,EAAeQ,OAAS,GAcxD,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YAAa,CACXC,SAAUb,IAAgBQ,IAF9B,SAME,mBACEM,QArBS,WACXd,IAAgBQ,GAClBP,EAAaD,EAAc,IAoBvB,UAAQ,WACRW,UAAU,YACVI,KAAK,QACL,gBAAef,IAAgBQ,EALjC,oBAWDN,EAAec,KAAI,SAACC,GAAD,OAClB,oBAEEN,UAAWC,IACT,YAAa,CACXM,OAAQD,IAASjB,IAJvB,SAQE,mBACEc,QAAS,kBAAMb,EAAagB,IAC5B,UAAQ,WACRN,UAAU,YACVI,KAAI,WAAME,GAJZ,SAMGA,KAbEA,MAkBT,oBAAIN,UAAWC,IACb,YAAa,CACXC,SAAUb,IAAgBS,IAF9B,SAME,mBACEK,QApDS,WACXd,IAAgBS,GAClBR,EAAaD,EAAc,IAmDvB,UAAQ,WACRW,UAAU,YACVI,KAAK,QACL,gBAAef,IAAgBS,EALjC,wBCrFFU,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQhB,KAAKiB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,IAAM3B,EAAQqB,EAAMT,OACpB,EAAsCgB,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB2B,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB6B,EAAhB,KAEMC,EAAW7B,EAAcD,EACzB+B,EAAaD,EAAW9B,EAAW,EACnCgC,EAAWF,EAAW/B,EAAQA,EAAQ+B,EAEtCG,EAAeb,EAClBc,MAAOH,EAAY,EAAIC,GAW1B,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWX,EADX,mBACiC8B,EADjC,cACgDC,EADhD,eAC+DjC,EAD/D,OAIA,sBAAKa,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOpC,EACPqC,SAAU,SAACC,GAAD,OAxBC,SAACA,GACpBT,GAAYS,EAAMC,OAAOH,OACzBR,EAAe,GAsBcY,CAAaF,IALpC,UAOE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aArCa,SAACgB,GAClBU,EAAeV,MAuCb,6BACGe,EAAahB,KAAI,SAAAyB,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YEjEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b8fda50f.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nfunction paginationsCount(\n  total: number,\n  perPage: number,\n): number[] {\n  const count = total / perPage;\n  const result = [];\n\n  for (let i = 0; i < count; i += 1) {\n    result.push(i + 1);\n  }\n\n  return result;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const paginationNums = paginationsCount(total, perPage);\n  const firstPage = paginationNums[0];\n  const lastPage = paginationNums[paginationNums.length - 1];\n\n  const prevPage = () => {\n    if (currentPage !== firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage !== lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item', {\n          disabled: currentPage === firstPage,\n        },\n      )}\n      >\n        <a\n          onClick={prevPage}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === firstPage}\n        >\n          «\n        </a>\n      </li>\n\n      {paginationNums.map((page: number) => (\n        <li\n          key={page}\n          className={cn(\n            'page-item', {\n              active: page === currentPage,\n            },\n          )}\n        >\n          <a\n            onClick={() => onPageChange(page)}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\n        'page-item', {\n          disabled: currentPage === lastPage,\n        },\n      )}\n      >\n        <a\n          onClick={nextPage}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = items.length;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const maxItems = currentPage * perPage;\n  const firstItem = (maxItems - perPage) + 1;\n  const lastItem = maxItems > total ? total : maxItems;\n\n  const visibleItems = items\n    .slice((firstItem - 1), lastItem);\n\n  const selectedPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const pageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => selectedPage(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={pageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}